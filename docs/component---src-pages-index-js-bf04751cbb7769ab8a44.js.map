{"version":3,"sources":["webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/utils/typography.js","webpack:///./src/components/header.js","webpack:///./src/components/footer.js","webpack:///./src/components/layout.js","webpack:///./src/components/post.js","webpack:///./src/pages/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["loader","enqueue","React","createContext","typography","Typography","deYoung","rhythm","scale","header","options","data","_2564418008","Object","core_browser_esm","StyledHeader","gatsby_link_default","a","to","Title","site","siteMetadata","siteTitle","Description","siteDescription","styled_base_browser_esm","target","name","styles","footer","_2558833744","Footer","author","layout","_ref","children","_2383289036","Wrapper","Helmet","charSet","rel","href","siteUrl","components_post","console","log","post","content","post_Wrapper","post_Date","frontmatter","date","post_Title","title","Body","dangerouslySetInnerHTML","__html","html","Date","__webpack_exports__","PageCount","allMarkdownRemark","totalCount","edges","map","_ref2","node","key","id","query","m","module","exports","require","default","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","assign","json"],"mappings":"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","file":"component---src-pages-index-js-bf04751cbb7769ab8a44.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import Typography from 'Typography'\nimport deYoung from 'typography-theme-de-young'\n\nconst typography = new Typography(deYoung)\n\nexport const { scale, rhythm, options } = typography\nexport default typography\n","import React from 'react'\nimport { Link, graphql, useStaticQuery } from 'gatsby'\nimport styled from '@emotion/styled'\nimport { rhythm } from '../utils/typography'\n\nexport default () => {\n  const data = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            siteTitle,\n            siteDescription\n          }\n        }\n      }\n    `\n  )\n\n  return (\n    <StyledHeader>\n      <Link to={`/`}>\n        <Title>\n          {data.site.siteMetadata.siteTitle}\n        </Title>\n      </Link>\n      <Description>{data.site.siteMetadata.siteDescription}</Description>\n    </StyledHeader>\n  )\n}\n\nconst StyledHeader = styled.header`\n  text-align: center;\n  padding-top: ${rhythm(1.5)};\n`\n\nconst Title = styled.h1`\n  margin-top: 0;\n  display: inline-block;\n`\n\nconst Description = styled.p`\n  font-size: 0.7rem;\n`\n","import React from 'react'\nimport { graphql, useStaticQuery } from 'gatsby'\nimport styled from '@emotion/styled'\n\nimport { rhythm } from '../utils/typography'\n\nexport default () => {\n  const data = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            author\n          }\n        }\n      }\n    `\n  )\n\n  return (\n    <Footer>\n      <p>Â© 2019 {data.site.siteMetadata.author}</p>\n    </Footer>\n  )\n}\n\nconst Footer = styled.footer`\n  margin: ${rhythm(2)} 0 ${rhythm(1 / 2)};\n  text-align: center;\n`\n","import React from 'react'\nimport { graphql, useStaticQuery } from 'gatsby'\nimport styled from '@emotion/styled'\nimport { Helmet } from 'react-helmet'\n\nimport Header from './header'\nimport Footer from './footer'\n\nexport default ({ children }) => {\n  const data = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            siteTitle,\n            siteUrl\n          }\n        }\n      }\n    `\n  )\n\n  return (\n    <Wrapper>\n      <Helmet>\n        <meta charSet=\"utf-8\" />\n        <title>{data.site.siteMetadata.siteTitle}</title>\n        <link rel=\"canonical\" href={data.site.siteMetadata.siteUrl} />\n      </Helmet>\n      <Header />\n      {children}\n      <Footer />\n    </Wrapper>\n  )\n}\n\nconst Wrapper = styled.div`\n  margin: 0 auto;\n  max-width: 700px;\n`\n","import React from 'react'\nimport styled from '@emotion/styled'\n\nimport { rhythm } from '../utils/typography'\n\nexport default (data) => {\n  console.log(data)\n  const post = data.content\n  return (\n    <Wrapper>\n      <Date>{post.frontmatter.date}</Date>\n      <Title>\n        {post.frontmatter.title}\n      </Title>\n      <Body dangerouslySetInnerHTML={{ __html: post.html }} />\n    </Wrapper>\n  )\n}\n\nconst Wrapper = styled.div`\n  margin-bottom: ${rhythm(1)};\n  background-color: #fff;\n  padding: ${rhythm(1.5)};\n  border-radius: 5px;\n`\n\nconst Title = styled.h3`\n  margin: 0;\n  padding-left: ${rhythm(1 / 2)};\n  display: inline-block;\n  font-size: 0.9rem;\n`\n\nconst Date = styled.p`\n  color: #00aa8c;\n  display: inline-block;\n  font-size: ${rhythm(1)};\n`\n\nconst Body = styled.div`\n  color: #646464;\n  line-height: 1.7;\n  font-size: 0.8rem;\n\n  li {\n    margin-bottom: 0;\n\n    p {\n      margin-bottom: 0;\n    }\n\n    ul {\n      margin-top: 0;\n    }\n  }\n`\n","import React from 'react'\nimport { graphql } from 'gatsby'\nimport styled from '@emotion/styled'\n\nimport Layout from '../components/layout'\nimport Post from '../components/post'\n\nexport default ({ data }) => (\n  <Layout>\n    <PageCount>{data.allMarkdownRemark.totalCount} Posts</PageCount>\n    {data.allMarkdownRemark.edges.map(({ node }) => (\n      <Post key={node.id} content={node} />\n    ))}\n  </Layout>\n)\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      totalCount\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date(formatString: \"YYYY-mm-DD\")\n          }\n          fields {\n            slug\n          }\n          html\n        }\n      }\n    }\n  }\n`\n\nconst PageCount = styled.h4`\n  font-size: 0.8rem;\n  text-align: right;\n`\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}